services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      worker:
        condition: service_started
    deploy: &id001
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    env_file:
    - ./backend/.env
    environment:
    - REDIS_HOST=redis
    - REDIS_PORT=6379
    - REDIS_PASSWORD=
    - REDIS_SSL=False
    - RABBITMQ_HOST=rabbitmq
    - RABBITMQ_PORT=5672
    - LOG_LEVEL=INFO
    - LOG_FORMAT=structured
    - GUNICORN_WORKERS=4
    image: ghcr.io/suna-ai/suna-backend:latest
    platform: linux/amd64
    ports:
    - 8000:8000
    volumes:
    - ./backend/.env:/app/.env:ro
    - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  frontend:
    build:
      context: ./Suna frontend
      dockerfile: Dockerfile
    command:
    - npm
    - run
    - start
    depends_on:
    - backend
    deploy: *id001
    environment:
    - NODE_ENV=production
    init: true
    ports:
    - 3000:3000
    volumes:
    - ./Suna frontend/.env.local:/app/.env.local:ro
  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
    - RABBITMQ_DEFAULT_USER=admin
    - RABBITMQ_DEFAULT_PASS=secure_rabbitmq_password
    - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=0.8
    - RABBITMQ_DISK_FREE_LIMIT=2GB
    ports:
    - 5672:5672
    - 15672:15672
    restart: unless-stopped
    volumes:
    - rabbitmq_data:/var/lib/rabbitmq
    - ./backend/services/docker/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
  redis:
    image: redis:7-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
    - 6379:6379
    restart: unless-stopped
    volumes:
    - redis_data:/data
    - ./backend/services/docker/redis.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: uv run dramatiq --processes 4 --threads 4 run_agent_background
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy: *id001
    env_file:
    - ./backend/.env
    environment:
    - REDIS_HOST=redis
    - REDIS_PORT=6379
    - REDIS_PASSWORD=
    - REDIS_SSL=False
    - RABBITMQ_HOST=rabbitmq
    - RABBITMQ_PORT=5672
    - LOG_LEVEL=INFO
    - LOG_FORMAT=structured
    - DRAMATIQ_TIMEOUT=300
    image: ghcr.io/suna-ai/suna-backend:latest
    platform: linux/amd64
    volumes:
    - ./backend/.env:/app/.env:ro
    - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "import redis; r=redis.Redis(host='redis', port=6379); r.ping()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
volumes:
  rabbitmq_data: null
  redis_data: null
